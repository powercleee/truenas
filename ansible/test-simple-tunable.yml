---
- name: Simple Tunable Test (No Job Monitoring)
  hosts: localhost
  become: false
  gather_facts: true
  connection: local
  vars:
    truenas_api_key: "{{ lookup('env', 'TRUENAS_API_KEY') }}"

  tasks:
    - name: Check TRUENAS_API_KEY environment variable
      fail:
        msg: "TRUENAS_API_KEY environment variable is not set"
      when: truenas_api_key == ""

    - name: Test direct tunable creation
      uri:
        url: "{{ truenas_api_url }}/tunable"
        method: POST
        headers:
          Authorization: "Bearer {{ truenas_api_key }}"
          Content-Type: "application/json"
        body_format: json
        body:
          var: "test.simple_tunable"
          value: "42"
          type: "SYSCTL"
          comment: "Simple test tunable"
          enabled: true
        status_code: [200, 201, 409]  # 409 = already exists
        validate_certs: "{{ truenas_validate_certs }}"
      register: test_result

    - name: Display test result
      debug:
        msg:
          - "Status: {{ test_result.status }}"
          - "Response type: {{ test_result.json | type_debug }}"
          - "Response: {{ test_result.json }}"
          - "Is response a number? {{ test_result.json is number }}"

    - name: Check if response is a job ID
      debug:
        msg: "API returned job ID: {{ test_result.json }}"
      when:
        - test_result.json is defined
        - test_result.json is number

    - name: Check if response is tunable object
      debug:
        msg: "API returned tunable object with ID: {{ test_result.json.id }}"
      when:
        - test_result.json is defined
        - test_result.json is mapping
        - test_result.json.id is defined

    - name: Clean up test tunable
      uri:
        url: "{{ truenas_api_url }}/tunable/id/{{ test_result.json.id if test_result.json.id is defined else test_result.json }}"
        method: DELETE
        headers:
          Authorization: "Bearer {{ truenas_api_key }}"
        status_code: [200, 204, 404]
        validate_certs: "{{ truenas_validate_certs }}"
      when:
        - test_result.status in [200, 201]
        - (test_result.json.id is defined) or (test_result.json is number)
      failed_when: false