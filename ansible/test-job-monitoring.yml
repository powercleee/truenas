---
- name: Test Job Monitoring
  hosts: localhost
  become: false
  gather_facts: true
  connection: local
  vars:
    truenas_api_key: "{{ lookup('env', 'TRUENAS_API_KEY') }}"

  tasks:
    - name: Create a test tunable and get job ID
      uri:
        url: "{{ truenas_api_url }}/tunable"
        method: POST
        headers:
          Authorization: "Bearer {{ truenas_api_key }}"
          Content-Type: "application/json"
        body_format: json
        body:
          var: "test.job_monitor"
          value: "123"
          type: "SYSCTL"
          comment: "Job monitoring test"
          enabled: true
        status_code: [200, 201, 409]
        validate_certs: "{{ truenas_validate_certs }}"
      register: create_result

    - name: Display job ID
      debug:
        msg: "Created job ID: {{ create_result.json }}"

    - name: Query specific job immediately
      uri:
        url: "{{ truenas_api_url }}/core/get_jobs?id={{ create_result.json | int }}"
        method: GET
        headers:
          Authorization: "Bearer {{ truenas_api_key }}"
        status_code: [200]
        validate_certs: "{{ truenas_validate_certs }}"
      register: job_query

    - name: Display job query result
      debug:
        msg:
          - "Job query response:"
          - "Found {{ job_query.json | length }} jobs"
          - "Jobs: {{ job_query.json }}"

    - name: Query all jobs
      uri:
        url: "{{ truenas_api_url }}/core/get_jobs"
        method: GET
        headers:
          Authorization: "Bearer {{ truenas_api_key }}"
        status_code: [200]
        validate_certs: "{{ truenas_validate_certs }}"
      register: all_jobs

    - name: Display all jobs
      debug:
        msg:
          - "Total jobs in system: {{ all_jobs.json | length }}"
          - "Recent jobs (last 5):"
          - "{{ all_jobs.json[-5:] | default([]) }}"

    - name: Clean up test tunable (find by name)
      uri:
        url: "{{ truenas_api_url }}/tunable"
        method: GET
        headers:
          Authorization: "Bearer {{ truenas_api_key }}"
        status_code: [200]
        validate_certs: "{{ truenas_validate_certs }}"
      register: all_tunables

    - name: Find and delete test tunable
      uri:
        url: "{{ truenas_api_url }}/tunable/id/{{ item.id }}"
        method: DELETE
        headers:
          Authorization: "Bearer {{ truenas_api_key }}"
        status_code: [200, 204, 404]
        validate_certs: "{{ truenas_validate_certs }}"
      loop: "{{ all_tunables.json }}"
      when: item.var == "test.job_monitor"
      failed_when: false