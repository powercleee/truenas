---
- name: Simple Tunable Test with Longer Wait
  hosts: localhost
  become: false
  gather_facts: true
  connection: local
  vars:
    truenas_api_key: "{{ lookup('env', 'TRUENAS_API_KEY') }}"

  tasks:
    - name: Create test tunable and get job ID
      uri:
        url: "{{ truenas_api_url }}/tunable"
        method: POST
        headers:
          Authorization: "Bearer {{ truenas_api_key }}"
          Content-Type: "application/json"
        body_format: json
        body:
          var: "vm.swappiness"
          value: "1"
          type: "SYSCTL"
          comment: "Simple test - wait for completion"
          enabled: true
        status_code: [200, 201, 409]
        validate_certs: "{{ truenas_validate_certs }}"
      register: create_result

    - name: Display job ID
      debug:
        msg: "Created job ID: {{ create_result.json }}"

    - name: Wait for job completion with longer timeout
      uri:
        url: "{{ truenas_api_url }}/core/get_jobs?id={{ create_result.json | int }}"
        method: GET
        headers:
          Authorization: "Bearer {{ truenas_api_key }}"
        status_code: [200]
        validate_certs: "{{ truenas_validate_certs }}"
      register: job_status
      until:
        - job_status.json is defined
        - job_status.json | length > 0
        - job_status.json[0].state in ['SUCCESS', 'FAILED', 'ABORTED']
      retries: 30  # 30 retries
      delay: 5     # 5 seconds each = 2.5 minutes total
      failed_when: false

    - name: Display final job status
      debug:
        msg:
          - "Final job state: {{ job_status.json[0].state }}"
          - "Job progress: {{ job_status.json[0].progress.percent }}%"
          - "Job error: {{ job_status.json[0].error | default('None') }}"
          - "Job result: {{ job_status.json[0].result.id | default('No result') }}"

    - name: Verify job succeeded
      debug:
        msg: "✅ Tunable creation succeeded!"
      when: job_status.json[0].state == 'SUCCESS'

    - name: Report job failure
      debug:
        msg: "❌ Tunable creation failed: {{ job_status.json[0].error }}"
      when: job_status.json[0].state == 'FAILED'