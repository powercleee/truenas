#!/bin/bash
# ZFS Snapshot Report Script for TrueNAS SCALE
# Generated by Ansible on {{ ansible_date_time.iso8601 | default('Check Mode - ' + lookup('pipe', 'date')) }}

set -euo pipefail

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Logging functions
log_info() { echo -e "${GREEN}[INFO]${NC} $1"; }
log_warn() { echo -e "${YELLOW}[WARN]${NC} $1"; }
log_error() { echo -e "${RED}[ERROR]${NC} $1"; }
log_section() { echo -e "${BLUE}=== $1 ===${NC}"; }

log_section "ZFS Snapshot Report for {{ zfs_pool }}"

# Function to show snapshot summary for a dataset
show_snapshot_summary() {
    local dataset=$1
    local description=$2

    echo
    log_info "$description ($dataset)"
    echo "----------------------------------------"

    if zfs list "$dataset" &>/dev/null; then
        local count=$(zfs list -H -t snapshot -r "$dataset" | wc -l)
        local total_size=$(zfs list -H -t snapshot -r "$dataset" -o used | awk '{sum += $1} END {print sum}' 2>/dev/null || echo "0")

        echo "Total snapshots: $count"
        echo "Total space used: $(numfmt --to=iec $total_size 2>/dev/null || echo "$total_size bytes")"

        if [[ $count -gt 0 ]]; then
            echo
            echo "Recent snapshots:"
            zfs list -H -t snapshot -r "$dataset" -s creation -o name,creation,used | tail -5 | \
            while IFS=$'\t' read -r name creation used; do
                printf "  %-40s %s (%s)\n" "$(basename "$name")" "$creation" "$used"
            done
        fi
    else
        log_warn "Dataset $dataset not found"
    fi
}

# Show summaries for all TrueNAS API managed datasets
{% for task in truenas_snapshot_tasks %}
show_snapshot_summary "{{ task.dataset }}" "{{ task.name }} ({{ task.dataset | replace(zfs_pool + '/', '') | title }})"
{% endfor %}

echo
log_section "Snapshot Space Usage Summary"
zfs list -t snapshot -o space,refer,used,name | head -20

echo
log_section "ZFS Pool Status"
zpool status {{ zfs_pool }}