---
- name: Get current network buffer tunable settings
  uri:
    url: "{{ truenas_api_url }}/api/v2.0/tunable"
    method: GET
    headers:
      Authorization: "Bearer {{ truenas_api_key }}"
    validate_certs: false
  register: current_tunables

- name: Configure network buffer settings
  uri:
    url: "{{ truenas_api_url }}/api/v2.0/tunable"
    method: POST
    headers:
      Authorization: "Bearer {{ truenas_api_key }}"
      Content-Type: "application/json"
    body_format: json
    body:
      var: "{{ item.var }}"
      value: "{{ item.value }}"
      type: "SYSCTL"
      comment: "{{ item.comment }} - configured by Ansible"
      enabled: true
    validate_certs: false
    status_code: [200, 201]
  loop:
    - var: "net.core.rmem_max"
      value: "{{ network_buffer_settings.net_core_rmem_max }}"
      comment: "Maximum socket receive buffer size"
    - var: "net.core.wmem_max"
      value: "{{ network_buffer_settings.net_core_wmem_max }}"
      comment: "Maximum socket send buffer size"
    - var: "net.core.rmem_default"
      value: "{{ network_buffer_settings.net_core_rmem_default }}"
      comment: "Default socket receive buffer size"
    - var: "net.core.wmem_default"
      value: "{{ network_buffer_settings.net_core_wmem_default }}"
      comment: "Default socket send buffer size"
    - var: "net.core.netdev_max_backlog"
      value: "{{ network_buffer_settings.net_core_netdev_max_backlog }}"
      comment: "Maximum network device backlog queue length"
    - var: "net.ipv4.tcp_congestion_control"
      value: "{{ network_buffer_settings.net_ipv4_tcp_congestion_control }}"
      comment: "TCP congestion control algorithm"
    - var: "net.core.netdev_budget"
      value: "{{ network_buffer_settings.net_core_netdev_budget }}"
      comment: "Network device budget per poll cycle"
    - var: "net.core.netdev_budget_usecs"
      value: "{{ network_buffer_settings.net_core_netdev_budget_usecs }}"
      comment: "Network device budget time limit"
    - var: "net.ipv4.tcp_window_scaling"
      value: "{{ network_buffer_settings.net_ipv4_tcp_window_scaling }}"
      comment: "Enable TCP window scaling"
    - var: "net.ipv4.tcp_timestamps"
      value: "{{ network_buffer_settings.net_ipv4_tcp_timestamps }}"
      comment: "Enable TCP timestamps"
    - var: "net.ipv4.tcp_sack"
      value: "{{ network_buffer_settings.net_ipv4_tcp_sack }}"
      comment: "Enable TCP selective acknowledgment"
    - var: "net.ipv4.tcp_no_metrics_save"
      value: "{{ network_buffer_settings.net_ipv4_tcp_no_metrics_save }}"
      comment: "Disable TCP metrics caching"
    - var: "net.ipv4.tcp_mtu_probing"
      value: "{{ network_buffer_settings.net_ipv4_tcp_mtu_probing }}"
      comment: "Enable TCP MTU probing"
    - var: "net.ipv4.tcp_adv_win_scale"
      value: "{{ network_buffer_settings.net_ipv4_tcp_adv_win_scale }}"
      comment: "TCP advertised window scaling factor"
  when: current_tunables.json | selectattr('var', 'equalto', item.var) | list | length == 0
  register: network_buffer_results

- name: Update existing network buffer settings
  uri:
    url: "{{ truenas_api_url }}/api/v2.0/tunable/{{ (current_tunables.json | selectattr('var', 'equalto', item.var) | first).id }}"
    method: PUT
    headers:
      Authorization: "Bearer {{ truenas_api_key }}"
      Content-Type: "application/json"
    body_format: json
    body:
      var: "{{ item.var }}"
      value: "{{ item.value }}"
      type: "SYSCTL"
      comment: "{{ item.comment }} - configured by Ansible"
      enabled: true
    validate_certs: false
  loop:
    - var: "net.core.rmem_max"
      value: "{{ network_buffer_settings.net_core_rmem_max }}"
      comment: "Maximum socket receive buffer size"
    - var: "net.core.wmem_max"
      value: "{{ network_buffer_settings.net_core_wmem_max }}"
      comment: "Maximum socket send buffer size"
    - var: "net.core.rmem_default"
      value: "{{ network_buffer_settings.net_core_rmem_default }}"
      comment: "Default socket receive buffer size"
    - var: "net.core.wmem_default"
      value: "{{ network_buffer_settings.net_core_wmem_default }}"
      comment: "Default socket send buffer size"
    - var: "net.core.netdev_max_backlog"
      value: "{{ network_buffer_settings.net_core_netdev_max_backlog }}"
      comment: "Maximum network device backlog queue length"
    - var: "net.ipv4.tcp_congestion_control"
      value: "{{ network_buffer_settings.net_ipv4_tcp_congestion_control }}"
      comment: "TCP congestion control algorithm"
    - var: "net.core.netdev_budget"
      value: "{{ network_buffer_settings.net_core_netdev_budget }}"
      comment: "Network device budget per poll cycle"
    - var: "net.core.netdev_budget_usecs"
      value: "{{ network_buffer_settings.net_core_netdev_budget_usecs }}"
      comment: "Network device budget time limit"
    - var: "net.ipv4.tcp_window_scaling"
      value: "{{ network_buffer_settings.net_ipv4_tcp_window_scaling }}"
      comment: "Enable TCP window scaling"
    - var: "net.ipv4.tcp_timestamps"
      value: "{{ network_buffer_settings.net_ipv4_tcp_timestamps }}"
      comment: "Enable TCP timestamps"
    - var: "net.ipv4.tcp_sack"
      value: "{{ network_buffer_settings.net_ipv4_tcp_sack }}"
      comment: "Enable TCP selective acknowledgment"
    - var: "net.ipv4.tcp_no_metrics_save"
      value: "{{ network_buffer_settings.net_ipv4_tcp_no_metrics_save }}"
      comment: "Disable TCP metrics caching"
    - var: "net.ipv4.tcp_mtu_probing"
      value: "{{ network_buffer_settings.net_ipv4_tcp_mtu_probing }}"
      comment: "Enable TCP MTU probing"
    - var: "net.ipv4.tcp_adv_win_scale"
      value: "{{ network_buffer_settings.net_ipv4_tcp_adv_win_scale }}"
      comment: "TCP advertised window scaling factor"
  when: current_tunables.json | selectattr('var', 'equalto', item.var) | list | length > 0
  register: network_buffer_update_results

- name: Configure TCP memory settings
  uri:
    url: "{{ truenas_api_url }}/api/v2.0/tunable"
    method: POST
    headers:
      Authorization: "Bearer {{ truenas_api_key }}"
      Content-Type: "application/json"
    body_format: json
    body:
      var: "net.ipv4.tcp_rmem"
      value: "{{ network_buffer_settings.net_ipv4_tcp_rmem }}"
      type: "SYSCTL"
      comment: "TCP receive memory allocation (min default max) - configured by Ansible"
      enabled: true
    validate_certs: false
    status_code: [200, 201]
  when: current_tunables.json | selectattr('var', 'equalto', 'net.ipv4.tcp_rmem') | list | length == 0
  register: tcp_rmem_result

- name: Update existing TCP receive memory settings
  uri:
    url: "{{ truenas_api_url }}/api/v2.0/tunable/{{ (current_tunables.json | selectattr('var', 'equalto', 'net.ipv4.tcp_rmem') | first).id }}"
    method: PUT
    headers:
      Authorization: "Bearer {{ truenas_api_key }}"
      Content-Type: "application/json"
    body_format: json
    body:
      var: "net.ipv4.tcp_rmem"
      value: "{{ network_buffer_settings.net_ipv4_tcp_rmem }}"
      type: "SYSCTL"
      comment: "TCP receive memory allocation (min default max) - configured by Ansible"
      enabled: true
    validate_certs: false
  when: current_tunables.json | selectattr('var', 'equalto', 'net.ipv4.tcp_rmem') | list | length > 0
  register: tcp_rmem_update_result

- name: Configure TCP write memory settings
  uri:
    url: "{{ truenas_api_url }}/api/v2.0/tunable"
    method: POST
    headers:
      Authorization: "Bearer {{ truenas_api_key }}"
      Content-Type: "application/json"
    body_format: json
    body:
      var: "net.ipv4.tcp_wmem"
      value: "{{ network_buffer_settings.net_ipv4_tcp_wmem }}"
      type: "SYSCTL"
      comment: "TCP send memory allocation (min default max) - configured by Ansible"
      enabled: true
    validate_certs: false
    status_code: [200, 201]
  when: current_tunables.json | selectattr('var', 'equalto', 'net.ipv4.tcp_wmem') | list | length == 0
  register: tcp_wmem_result

- name: Update existing TCP write memory settings
  uri:
    url: "{{ truenas_api_url }}/api/v2.0/tunable/{{ (current_tunables.json | selectattr('var', 'equalto', 'net.ipv4.tcp_wmem') | first).id }}"
    method: PUT
    headers:
      Authorization: "Bearer {{ truenas_api_key }}"
      Content-Type: "application/json"
    body_format: json
    body:
      var: "net.ipv4.tcp_wmem"
      value: "{{ network_buffer_settings.net_ipv4_tcp_wmem }}"
      type: "SYSCTL"
      comment: "TCP send memory allocation (min default max) - configured by Ansible"
      enabled: true
    validate_certs: false
  when: current_tunables.json | selectattr('var', 'equalto', 'net.ipv4.tcp_wmem') | list | length > 0
  register: tcp_wmem_update_result

- name: Display network buffer configuration results
  debug:
    msg: |
      Network Buffer Configuration:
      - Max Receive Buffer: {{ network_buffer_settings.net_core_rmem_max | int / 1024 / 1024 }}MB
      - Max Send Buffer: {{ network_buffer_settings.net_core_wmem_max | int / 1024 / 1024 }}MB
      - TCP Congestion Control: {{ network_buffer_settings.net_ipv4_tcp_congestion_control }}
      - Network Device Backlog: {{ network_buffer_settings.net_core_netdev_max_backlog }}
      - Configuration Status: {{ 'Updated' if network_buffer_update_results.changed or tcp_rmem_update_result.changed or tcp_wmem_update_result.changed else 'Created' if network_buffer_results.changed or tcp_rmem_result.changed or tcp_wmem_result.changed else 'Already Configured' }}