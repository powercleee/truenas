# Docker Compose User/Group Environment Variables
# Generated by Ansible on {{ ansible_date_time.iso8601 | default('Check Mode - ' + lookup('pipe', 'date')) }}
# Source this in your .env file or docker-compose.yml

# Media Services
{% for user in service_users | selectattr('category', 'equalto', 'Media') %}
{{ user.name.upper() }}_UID={{ user.uid }}
{{ user.name.upper() }}_GID={{ service_groups | selectattr('name', 'equalto', user.group) | map(attribute='gid') | first }}
{% endfor %}

# Download Services
{% for user in service_users | selectattr('category', 'equalto', 'Download') %}
{{ user.name.upper() }}_UID={{ user.uid }}
{{ user.name.upper() }}_GID={{ service_groups | selectattr('name', 'equalto', user.group) | map(attribute='gid') | first }}
{% endfor %}

# Security Services
{% for user in service_users | selectattr('category', 'equalto', 'Security') %}
{{ user.name.upper() }}_UID={{ user.uid }}
{{ user.name.upper() }}_GID={{ service_groups | selectattr('name', 'equalto', user.group) | map(attribute='gid') | first }}
{% endfor %}

# Web Services
{% for user in service_users | selectattr('category', 'equalto', 'Web') %}
{{ user.name.upper() }}_UID={{ user.uid }}
{{ user.name.upper() }}_GID={{ service_groups | selectattr('name', 'equalto', user.group) | map(attribute='gid') | first }}
{% endfor %}

# DevOps Services
{% for user in service_users | selectattr('category', 'equalto', 'DevOps') %}
{{ user.name.upper() }}_UID={{ user.uid }}
{{ user.name.upper() }}_GID={{ service_groups | selectattr('name', 'equalto', user.group) | map(attribute='gid') | first }}
{% endfor %}

# Monitoring Services
{% for user in service_users | selectattr('category', 'equalto', 'Monitoring') %}
{{ user.name.upper() }}_UID={{ user.uid }}
{{ user.name.upper() }}_GID={{ service_groups | selectattr('name', 'equalto', user.group) | map(attribute='gid') | first }}
{% endfor %}

# Container Management
{% for user in service_users | selectattr('category', 'equalto', 'Containers') %}
{{ user.name.upper() }}_UID={{ user.uid }}
{{ user.name.upper() }}_GID={{ service_groups | selectattr('name', 'equalto', user.group) | map(attribute='gid') | first }}
{% endfor %}

# Storage Services
{% for user in service_users | selectattr('category', 'equalto', 'Storage') %}
{{ user.name.upper() }}_UID={{ user.uid }}
{{ user.name.upper() }}_GID={{ service_groups | selectattr('name', 'equalto', user.group) | map(attribute='gid') | first }}
{% endfor %}

# Network Services
{% for user in service_users | selectattr('category', 'equalto', 'Network') %}
{{ user.name.upper() }}_UID={{ user.uid }}
{{ user.name.upper() }}_GID={{ service_groups | selectattr('name', 'equalto', user.group) | map(attribute='gid') | first }}
{% endfor %}

# Automation Services
{% for user in service_users | selectattr('category', 'equalto', 'Automation') %}
{{ user.name.upper() }}_UID={{ user.uid }}
{{ user.name.upper() }}_GID={{ service_groups | selectattr('name', 'equalto', user.group) | map(attribute='gid') | first }}
{% endfor %}

# Database Services
{% for user in service_users | selectattr('category', 'equalto', 'Database') %}
{{ user.name.upper() }}_UID={{ user.uid }}
{{ user.name.upper() }}_GID={{ service_groups | selectattr('name', 'equalto', user.group) | map(attribute='gid') | first }}
{% endfor %}

# Common Group IDs
{% for group in service_groups %}
{{ group.name.upper() }}_GID={{ group.gid }}
{% endfor %}

# Usage Examples:
#
# In docker-compose.yml:
# services:
#   grafana:
#     user: "${GRAFANA_UID}:${GRAFANA_GID}"
#     # or use group ID directly:
#     user: "${GRAFANA_UID}:${MONITOR_GID}"
#
# In .env file:
# source /root/docker_users.env